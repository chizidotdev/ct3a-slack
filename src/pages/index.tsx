import type { GetServerSideProps } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import Channels from "@components/Channels";
import Teams from "@components/Teams";
import Messages from "@components/Messages";
import Input from "@components/Input";
import { useRouter } from "next/router";
import { getServerAuthSession } from "src/server/common/get-server-auth-session";
import { Session } from "next-auth";
import { useSession } from "next-auth/react";

export default function Home() {
  const { data: teams } = trpc.team.getAll.useQuery();
  const { push } = useRouter();
  const session = useSession();
  if (!session) push("/login");

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="grid h-screen grid-cols-[5rem_16rem_1fr]">
        <Teams data={teams || []} />
        <Channels />

        <section className="grid grid-rows-[3.5rem_1fr_4rem]">
          <div className="col-span-3">Header</div>

          <Messages />

          <Input />
        </section>
        {/* <AuthShowcase /> */}
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps<{
  session: Session | null;
}> = async (context) => {
  const session = await getServerAuthSession(context);

  return {
    props: { session },
  };
};
